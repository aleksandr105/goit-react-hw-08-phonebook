{"version":3,"file":"static/js/34.714ead7b.chunk.js","mappings":"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","sources":["Pages/ContactsPage/ContactsPage.styled.js","components/ContatctForm/ContactForm.styled.js","redux/contactsOperations/selectors.js","components/ContatctForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/Options/Options.styled.js","components/Options/Options.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","Pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport IMG from 'Photo/Raznotsvetnye-diskovye-telefony.jpg';\n\nexport const SectionContacts = styled.section`\n  background-image: url(${IMG});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  padding-top: 1vh;\n  padding-left: 8px;\n  padding-right: 8px;\n  min-height: calc(100vh - ${props => props.headerHeight}px);\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  padding: 5px 5px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 460px;\n  background-color: silver;\n  opacity: 0.9;\n  border-radius: 15px;\n  height: calc(92vh - ${props => props.headerHeight}px);\n`;\n\nexport const TitleLIstContacts = styled.h2`\n  margin: 10px 0;\n  text-align: center;\n`;\n\nexport const Titel = styled.h1`\n  margin-bottom: 10px;\n  text-align: center;\n  color: blue;\n`;\n\nexport const NoContactMessage = styled.p`\n  text-align: center;\n  font-size: 20px;\n  color: red;\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Label = styled.label`\n  display: block;\n  color: blue;\n`;\n\nexport const ButtonAdd = styled.button`\n  padding: 8px;\n  background-color: #50ceff;\n  width: 110px;\n  border: none;\n  border-radius: 5px;\n  font-weight: 600;\n  transition-duration: 130ms;\n  :hover {\n    transform: scale(1.03);\n    color: #fff;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  width: 85%;\n  height: 20px;\n  margin-bottom: 10px;\n  margin-top: 5px;\n  padding: 5px 5px 5px 22px;\n  border-radius: 5px;\n`;\n\nexport const FormEl = styled(Form)`\n  border: 2px solid black;\n  padding: 10px;\n  border-radius: 10px;\n`;\n","export const getContacts = state => state.contactsSlice.contacts.items;\nexport const getIsLoading = state => state.contactsSlice.contacts.isLoading;\nexport const getError = state => state.contactsSlice.contacts.error;\nexport const getStatusFilter = state => state.contactsSlice.filter;\n","import PropTypes from 'prop-types';\nimport { Formik, ErrorMessage } from 'formik';\nimport { Label, ButtonAdd, Input, FormEl } from './ContactForm.styled';\nimport * as yup from 'yup';\nimport { getIsLoading } from 'redux/contactsOperations/selectors';\nimport { useSelector } from 'react-redux';\nimport { FcCellPhone, FcBusinessman } from 'react-icons/fc';\n\nlet initialValues = {\n  name: '',\n  number: '',\n};\n\nlet schema = yup.object().shape({\n  name: yup.string().min(2).max(25).required('Mandatory field'),\n  number: yup\n    .number()\n    .positive()\n    .integer()\n    .lessThan(9999999999999)\n    .required('Mandatory field'),\n});\n\nexport const ContactForm = ({ handleSubmit }) => {\n  const isLoading = useSelector(getIsLoading);\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <FormEl name=\"phonebook\" autoComplete=\"off\">\n        <Label htmlFor=\"\">\n          <span style={{ display: 'block' }}>Name</span>\n          <span style={{ position: 'relative' }}>\n            <FcBusinessman\n              style={{ position: 'absolute', left: '0' }}\n              size={20}\n            />\n            <Input placeholder=\"Rosie Simpson\" type=\"text\" name=\"name\" />\n          </span>\n          <ErrorMessage name=\"name\" component=\"p\" />\n        </Label>\n        <Label htmlFor=\"\">\n          <span style={{ display: 'block' }}>Number</span>\n          <span style={{ position: 'relative' }}>\n            <FcCellPhone\n              style={{ position: 'absolute', left: '0' }}\n              size={20}\n            />\n            <Input placeholder=\"459-12-56\" type=\"tel\" name=\"number\" />\n          </span>\n          <ErrorMessage name=\"number\" component=\"p\" />\n        </Label>\n        <ButtonAdd type=\"submit\" disabled={isLoading}>\n          Add contact\n        </ButtonAdd>\n      </FormEl>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  height: calc(${props => props.contactsHeight}px - 325px);\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding: 15px 5px 0px 5px;\n  li:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  color: tomato;\n  display: flex;\n  font-weight: 600;\n  align-items: center;\n  padding-right: 3px;\n  position: relative;\n`;\n\nexport const ItemText = styled.span`\n  color: black;\n  font-weight: 600;\n  margin-left: 3px;\n`;\n\nexport const Number = styled.a`\n  margin-left: auto;\n  color: blue;\n  text-decoration: none;\n  transition-duration: 130ms;\n  :hover {\n    transform: scale(1.08);\n    color: tomato;\n  }\n`;\n\nexport const OptionsBtn = styled.button`\n  padding: 2px;\n  background-color: #50ceff;\n  border-radius: 5px;\n  border: none;\n  height: 25px;\n  font-weight: 600;\n  transition-duration: 130ms;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 4px;\n\n  :hover {\n    color: red;\n    transform: scale(1.05);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n  padding: 135px 5px 0px 5px;\n`;\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  background-color: silver;\n  padding: 40px;\n  border-radius: 10px;\n  width: 480px;\n`;\n\nexport const EditForm = styled(Form)`\n  width: 100%;\n  border: 2px solid black;\n  border-radius: 10px;\n  padding: 20px;\n`;\n\nexport const EditInput = styled(Field)`\n  border-radius: 5px;\n  display: block;\n  width: 100%;\n  height: 25px;\n  margin-bottom: 10px;\n  margin-top: 5px;\n  padding: 5px 5px 5px 25px;\n`;\n\nexport const CloseBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  background-color: #ffffff;\n  height: 25px;\n  width: 25px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n  right: 8px;\n  top: 8px;\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  color: blue;\n`;\n\nexport const InputContainer = styled.span`\n  position: relative;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { useEffect } from 'react';\nimport * as yup from 'yup';\nimport { ButtonAdd } from '../ContatctForm/ContactForm.styled';\nimport {\n  Backdrop,\n  ModalContainer,\n  EditForm,\n  EditInput,\n  CloseBtn,\n  Label,\n  InputContainer,\n} from './Modal.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from 'redux/contactsOperations/operations';\nimport { getContacts } from 'redux/contactsOperations/selectors';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BsXLg } from 'react-icons/bs';\nimport { FcCellPhone, FcBusinessman } from 'react-icons/fc';\n\nlet schema = yup.object().shape({\n  name: yup.string().min(2).max(25).required('Mandatory field'),\n  number: yup\n    .number()\n    .positive()\n    .integer()\n    .lessThan(9999999999999)\n    .required('Mandatory field'),\n});\n\nexport const Modal = ({ closeModal, name, phone, id }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    const escCloseModal = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', escCloseModal);\n\n    return () => {\n      window.removeEventListener('keydown', escCloseModal);\n    };\n  }, [closeModal]);\n\n  let initialValues = {\n    name: name,\n    number: phone,\n  };\n\n  const onEdit = contact => {\n    const contactСheck = contacts.find(\n      el =>\n        el.name.toLowerCase() === contact.name.toLowerCase() &&\n        el.name.toLowerCase() !== name.toLowerCase()\n    );\n\n    const contactNotchanged =\n      name.toLowerCase() === contact.name.toLowerCase() &&\n      phone === contact.number;\n\n    if (contactСheck ?? contactNotchanged) {\n      toast.error(`${name} сontact already exists`, {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return;\n    }\n\n    const contactEdited = {\n      name: contact.name,\n      number: contact.number.match(/\\d{3}(?=\\d{2,3})|\\d+/g).join('-'),\n    };\n\n    dispatch(editContact({ id, contactEdited }));\n    closeModal();\n  };\n\n  return (\n    <Backdrop\n      onClick={e => {\n        if (e.target === e.currentTarget) closeModal();\n      }}\n    >\n      <ToastContainer style={{ paddingTop: '50px' }} />\n      <ModalContainer>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={onEdit}\n          validationSchema={schema}\n        >\n          <EditForm name=\"phonebook\" autoComplete=\"off\">\n            <Label htmlFor=\"\">\n              <span style={{ display: 'block' }}>Name</span>\n              <InputContainer>\n                <FcBusinessman\n                  size={'25px'}\n                  style={{ position: 'absolute', left: 0, top: 0 }}\n                />\n                <EditInput type=\"text\" name=\"name\" />\n              </InputContainer>\n              <ErrorMessage name=\"name\" component=\"p\" />\n            </Label>\n            <Label htmlFor=\"\">\n              <span style={{ display: 'block' }}> Number</span>\n              <InputContainer>\n                <FcCellPhone\n                  size={'25px'}\n                  style={{ position: 'absolute', left: 0, top: 0 }}\n                />\n                <EditInput type=\"tel\" name=\"number\" />\n              </InputContainer>\n              <ErrorMessage name=\"number\" component=\"p\" />\n            </Label>\n            <ButtonAdd type=\"submit\">Edit contact</ButtonAdd>\n          </EditForm>\n        </Formik>\n        <CloseBtn onClick={closeModal}>\n          <BsXLg fill=\"red\" />\n        </CloseBtn>\n      </ModalContainer>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const OptionsBtnContainer = styled.div`\n  position: absolute;\n  background-color: #505050;\n  z-index: 100;\n  border-radius: 20px;\n  right: 0;\n  padding: 8px;\n`;\n\nexport const ButtonDelete = styled.button`\n  padding: 2px;\n  background-color: #0100ff;\n  border-radius: 5px;\n  border: none;\n  width: 53px;\n  height: 20px;\n  font-weight: 600;\n  transition-duration: 130ms;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 5px;\n  :hover {\n    color: red;\n    transform: scale(1.1);\n  }\n`;\n\nexport const ButtonEdit = styled.button`\n  padding: 2px;\n  background-color: #deff00;\n  border-radius: 5px;\n  border: none;\n  width: 53px;\n  height: 20px;\n  font-weight: 600;\n  transition-duration: 130ms;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover {\n    color: red;\n    transform: scale(1.1);\n  }\n`;\n","import {\n  OptionsBtnContainer,\n  ButtonDelete,\n  ButtonEdit,\n} from './Options.styled';\nimport { useEffect, useRef } from 'react';\n\nexport const Options = ({\n  deleteContact,\n  togleOptionsShow,\n  togleModal,\n  id,\n  optionBtnRef,\n}) => {\n  const refOptions = useRef();\n\n  useEffect(() => {\n    const closedOptions = e => {\n      if (refOptions.current !== e.target && optionBtnRef.current !== e.target)\n        togleOptionsShow();\n    };\n\n    window.addEventListener('click', closedOptions);\n    return () => {\n      window.removeEventListener('click', closedOptions);\n    };\n  }, [optionBtnRef, togleOptionsShow]);\n\n  return (\n    <OptionsBtnContainer ref={refOptions}>\n      <ButtonDelete\n        type=\"button\"\n        onClick={() => {\n          deleteContact(id);\n          togleOptionsShow();\n        }}\n      >\n        Delete\n      </ButtonDelete>\n      <ButtonEdit\n        onClick={() => {\n          togleModal();\n          togleOptionsShow();\n        }}\n      >\n        Edit\n      </ButtonEdit>\n    </OptionsBtnContainer>\n  );\n};\n","import { Item, ItemText, Number, OptionsBtn } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\nimport { useState, useRef } from 'react';\nimport { Modal } from 'components/Modal/Modal';\nimport { Options } from 'components/Options/Options';\n\nexport const ContactItem = ({\n  id,\n  index,\n  name,\n  phone,\n  deleteContact,\n  onDisabledOptions,\n  disabledOptionsStatus,\n}) => {\n  const number = phone.replaceAll('-', '');\n  const [openModal, setOpenModal] = useState(false);\n  const [moreOptions, setMoreOptions] = useState(false);\n  const optionBtnRef = useRef();\n\n  const togleModal = () => setOpenModal(prev => !prev);\n  const togleOptionsShow = () => {\n    setMoreOptions(prev => !prev);\n    onDisabledOptions(prev => !prev);\n  };\n\n  return (\n    <>\n      <Item>\n        {index + 1}.<ItemText>{name}:</ItemText>\n        <Number href={`tel:${number}`}>{phone}</Number>\n        <OptionsBtn\n          onClick={togleOptionsShow}\n          disabled={disabledOptionsStatus}\n          ref={optionBtnRef}\n        >\n          options\n        </OptionsBtn>\n        {moreOptions && (\n          <Options\n            togleModal={togleModal}\n            deleteContact={deleteContact}\n            togleOptionsShow={togleOptionsShow}\n            id={id}\n            optionBtnRef={optionBtnRef}\n          />\n        )}\n        {openModal && (\n          <Modal closeModal={togleModal} name={name} phone={number} id={id} />\n        )}\n      </Item>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  deleteContact: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n};\n","import { List } from './ContactList.styled';\nimport PropTypes from 'prop-types';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useState } from 'react';\n\nexport const ContactList = ({\n  visibalFiltr,\n  deleteContact,\n  containerHeight,\n}) => {\n  const [disabledOptions, setDisabledOptions] = useState(false);\n\n  return (\n    <List contactsHeight={containerHeight}>\n      {visibalFiltr\n        .sort((firstName, secondName) =>\n          firstName.name.localeCompare(secondName.name)\n        )\n        .map(({ id, name, number }, index) => (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            phone={number}\n            index={index}\n            deleteContact={deleteContact}\n            onDisabledOptions={setDisabledOptions}\n            disabledOptionsStatus={disabledOptions}\n          />\n        ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  deleteContact: PropTypes.func.isRequired,\n  visibalFiltr: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const FilterInput = styled.input`\n  display: block;\n  margin-top: 8px;\n  width: 70%;\n  height: 20px;\n  margin-bottom: 5px;\n  padding: 5px 5px 5px 25px;\n  border-radius: 5px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: block;\n  font-size: 18px;\n  font-weight: 600;\n  padding-left: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { FilterInput, FilterLabel } from './Filter.styled';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Filter = ({ changeFilter }) => {\n  return (\n    <FilterLabel htmlFor=\"\">\n      <span style={{ display: 'block' }}> Fild contacts by name</span>\n      <span style={{ position: 'relative' }}>\n        <FcSearch\n          size={18}\n          style={{ position: 'absolute', left: 2, top: '1' }}\n        />\n        <FilterInput\n          type=\"text\"\n          placeholder=\"Aleksandr\"\n          onChange={changeFilter}\n        />\n      </span>\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n};\n","import {\n  Container,\n  TitleLIstContacts,\n  Titel,\n  NoContactMessage,\n  SectionContacts,\n} from './ContactsPage.styled';\nimport { useEffect, useState } from 'react';\nimport { ContactForm } from '../../components/ContatctForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { writeFilter } from '../../redux/contactsOperations/contactsSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  addContact,\n  removeContact,\n} from 'redux/contactsOperations/operations';\nimport {\n  getContacts,\n  getStatusFilter,\n  getIsLoading,\n  getError,\n} from 'redux/contactsOperations/selectors';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useRef } from 'react';\n\nconst ContactsPage = ({ refHeader }) => {\n  const filter = useSelector(getStatusFilter);\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  const containerHeight = useRef();\n\n  const [headerHeight, setHeaderHeight] = useState(null);\n  const [contactsHeight, setContactsHeight] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const heightHeader = refHeader.current.getBoundingClientRect().height;\n    setHeaderHeight(heightHeader);\n\n    const heightContainer =\n      containerHeight.current.getBoundingClientRect().height;\n    setContactsHeight(Math.round(heightContainer));\n  }, [refHeader, contactsHeight]);\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    const contactСheck = contacts.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (!contactСheck) {\n      const contact = {\n        name: name,\n        number: number.match(/\\d{3}(?=\\d{2,3})|\\d+/g).join('-'),\n      };\n\n      dispatch(addContact(contact));\n\n      resetForm();\n    } else {\n      toast.error(`${name} is alreadi in contacts`, {\n        position: 'top-center',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n  };\n\n  const deleteContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  const showFiltered = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const changeFilter = e => {\n    dispatch(writeFilter(e.target.value));\n  };\n\n  const visibalFiltr = showFiltered();\n\n  return (\n    <SectionContacts headerHeight={headerHeight}>\n      <Container headerHeight={headerHeight} ref={containerHeight}>\n        <ToastContainer style={{ paddingTop: '50px' }} />\n        <Titel>Phonebook</Titel>\n        <ContactForm handleSubmit={handleSubmit} />\n        <TitleLIstContacts>Contacts</TitleLIstContacts>\n        <div\n          style={{\n            position: 'absolute',\n            right: 210,\n            top: 250,\n          }}\n        >\n          <ClipLoader\n            color={'#d63636'}\n            loading={isLoading && contacts.length !== 0}\n            size={40}\n          />\n        </div>\n\n        {contacts.length > 0 ? (\n          <>\n            <Filter changeFilter={changeFilter} />\n            <ContactList\n              visibalFiltr={visibalFiltr}\n              deleteContact={deleteContact}\n              containerHeight={contactsHeight}\n            />\n          </>\n        ) : (\n          <NoContactMessage>\n            {isLoading && !error ? (\n              <ClipLoader\n                color={'#d63636'}\n                loading={isLoading && !error}\n                size={100}\n              />\n            ) : (\n              'No contact yet'\n            )}\n          </NoContactMessage>\n        )}\n      </Container>\n    </SectionContacts>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["SectionContacts","styled","IMG","props","headerHeight","Container","TitleLIstContacts","Titel","NoContactMessage","Label","ButtonAdd","Input","Field","FormEl","Form","getContacts","state","contactsSlice","contacts","items","getIsLoading","isLoading","getError","error","getStatusFilter","filter","initialValues","name","number","schema","yup","shape","min","max","required","positive","integer","lessThan","ContactForm","handleSubmit","useSelector","onSubmit","validationSchema","autoComplete","htmlFor","style","display","position","left","size","placeholder","type","component","disabled","List","contactsHeight","Item","ItemText","Number","OptionsBtn","Backdrop","ModalContainer","EditForm","EditInput","CloseBtn","InputContainer","Modal","closeModal","phone","id","dispatch","useDispatch","useEffect","escCloseModal","e","code","window","addEventListener","removeEventListener","onClick","target","currentTarget","paddingTop","contact","contactСheck","find","el","toLowerCase","contactNotchanged","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","contactEdited","match","join","editContact","top","fill","OptionsBtnContainer","ButtonDelete","ButtonEdit","Options","deleteContact","togleOptionsShow","togleModal","optionBtnRef","refOptions","useRef","closedOptions","current","ref","ContactItem","index","onDisabledOptions","disabledOptionsStatus","replaceAll","useState","openModal","setOpenModal","moreOptions","setMoreOptions","prev","href","ContactList","visibalFiltr","containerHeight","disabledOptions","setDisabledOptions","sort","firstName","secondName","localeCompare","map","FilterInput","FilterLabel","Filter","changeFilter","onChange","refHeader","setHeaderHeight","setContactsHeight","fetchContacts","heightHeader","getBoundingClientRect","height","heightContainer","Math","round","includes","resetForm","addContact","right","color","loading","length","writeFilter","value","removeContact"],"sourceRoot":""}